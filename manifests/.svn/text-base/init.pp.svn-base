#### Puppet module for MCollective ###
class mcollective {

  $mc_sharepath = $operatingsystem ? {
    Solaris => '/opt/csw/share/mcollective',
    default => '/usr/share/mcollective'
  }

  $plugin_path = "${mc_sharepath}/plugins"

  $config_path= $operatingsystem ? {
    Solaris => '/etc/opt/csw/mcollective',
    default => '/etc/mcollective'
  }

  file { "${config_path}":
    ensure => directory,
    owner => 'root',
    mode => 0644,
  }

  if $operatingsystem != "Solaris"
  {
    # install the "common" package required for both client and server
    $mcollpkg = $operatingsystem ? {
      default   => "mcollective-common",
    }
    package { $mcollpkg:
      ensure => present,
    }

    # we need the rubgems installed as well.
    $stomppkg = $operatingsystem ? {
      default   => "libstomp-ruby1.8",
      RedHat    => "rubygem-stomp.noarch",
      CentOs    => "rubygem-stomp.noarch"
    }
    package { $stomppkg:
            ensure => present,
    }
  }

  case $mcollective_type {
      client:  { include mcollective::client }
      default: { include mcollective::server }
  }
}

# setup the class for the "server" element - this is required on all systems that you wish to monitor/control
class mcollective::server inherits mcollective {
  notice("server: $config_path")

  file { "${mc_sharepath}":
    ensure => directory,
    owner => 'root',
    mode => 0644,
  }
  file { "${plugin_path}":
    ensure => directory,
    owner => 'root',
    mode => 0644,
    require => File["${mc_sharepath}"],
  }
  file { "${plugin_path}/mcollective":
    ensure => directory,
    owner => 'root',
    mode => 0644,
    require => File["${plugin_path}"],
  }
  file { "agents":
    source => "puppet:///modules/mcollective/agent",
    ensure => directory,
    recurse => true,
    owner => 'root',
    mode => 0644,
    path => "${plugin_path}/mcollective/agent/",
    require => File["${plugin_path}/mcollective"],
  }
  file { "facts":
    source => "puppet:///modules/mcollective/facts",
    ensure => directory,
    recurse => true,
    owner => 'root',
    mode => 0644,
    path => "${plugin_path}/mcollective/facts/",
    require => File["${plugin_path}/mcollective"],
  }

  # push the server config out to the nodes
  file {"mcollective-server.cfg":
          source => ["puppet:///modules/mcollective/server.cfg-$operatingsystem","puppet:///modules/mcollective/server.cfg"],
          owner => "root",
          group => "root",
          mode => 440,
          path => "$config_path/server.cfg",
  }

  # install the "server" package
  package { "mcollective":
          name => $operatingsystem ? {
            Solaris => 'mcollective',
            default => 'mcollective'
          },
          provider => $operatingsystem ? {
            Solaris => pkgutil,
	    RedHat  => yum,
	    CentOs  => yum,
            default => apt,
          },
          ensure => present,
  }

  if $operatingsystem == 'Solaris' {
    file{
      "/opt/csw/lib/ruby/site_ruby/1.8/stomp.rb":
        owner => root,
        group => root,
        mode => 644,
        source => "puppet:///modules/mcollective/stomp.rb";
    }
  
    File['/opt/csw/lib/ruby/site_ruby/1.8/stomp.rb'] -> Service['mcollective']

  }

  # setup the service and ensure it has the relevant files and packages installed.
  service {"mcollective":
          name => $operatingsystem ? {
            Solaris => 'cswmcollectived',
            default => 'mcollective'
          },
          ensure => running,
          hasrestart => true,
          require => [Package["mcollective"],File["mcollective-server.cfg"]],
          subscribe => [
                  Package["mcollective"],
                  File["mcollective-server.cfg"],
                  File['agents'],
                  File['facts']],
  }
}

# the class for mcollective clients
class mcollective::client inherits mcollective {
# No solaris support yet!

  # push the client cfg out to the nodes and subscribe to/require the package
  file {"mcollective-client.cfg":
          source => "puppet:///modules/mcollective/client.cfg",
          path => "$config_path/client.cfg",
          owner => "root",
          group => "root",
          mode => 440,
          require => [File["$config_path"],Package["mcollective-client"]],
          subscribe => Package["mcollective-client"],
  }

  # mc-* binaries
  file {"/usr/share/mcollective/bin/":
         source => "puppet:///modules/mcollective/scripts",
         ensure => directory,
         recurse => true,
         owner => 'root',
         mode => 0755,
         require => [File["$config_path"],Package["mcollective-client"]],
  }

  # install the package
  package { "mcollective-client":
          ensure => present,
  }
}
